aci_exporter:
  # Profiles for different fabrics
  fabrics:
    fab1:
      username: admin
      password: C1sco123
      apic:
        - https://192.168.1.99
      service_discovery: oobMgmtAddr
        
prometheus:
  server:
    ingress:
      enabled: true
      ingressClassName: "traefik"
      hosts:
        - aci-exporter-prom.apps.c1.cam.ciscolabs.com
    baseURL: "http://localhost"
    service:
      retentionSize: 5GB
      persistentVolume:
      accessModes: ["ReadWriteOnce"]
      size: 5Gi
    # Run on high performance nodes (For context here high performance means not on my Raspberry Pis... ;) )
    #nodeSelector:
    #  type: highperf
 
  alertmanager:
    baseURL: "http://localhost"
    ingress:
      enabled: true
      ingressClassName: "traefik"
      hosts:
        - host: aci-exporter-alertmanager.apps.c1.cam.ciscolabs.com
          paths:
            - path: /
              pathType: ImplementationSpecific
    #nodeSelector:
    #  type: highperf
    config:
      route:
        group_by: ['alertname']
        group_interval: 30s
        repeat_interval: 30s
        group_wait: 30s
        receiver: 'webex'
      receivers:
        - name: webex
          webex_configs:
            - send_resolved: false
              api_url: "https://webexapis.com/v1/messages"
              room_id: ""
              http_config:
                authorization:
                  credentials: ""
grafana:
  enable: true
  grafana.ini:
    users:
      viewers_can_edit: "True"
  adminPassword: <adminPassword>
  #nodeSelector:
  #  type: highperf
  deploymentStrategy:
    type: Recreate
  ingress:
    ingressClassName: "traefik"
    enabled: true
    hosts:
      - aci-exporter-grafana.apps.c1.cam.ciscolabs.com
  persistence:
    enabled: true
    size: 5Gi

loki: 
  loki:
    rulerConfig:
      external_url: http://aci-exporter-grafana.apps.c1.cam.ciscolabs.com

  minio:
  #  nodeSelector:
  #    type: highperf
    enabled: True 
  #storage: local   
  backend:
    replicas: 3
    #nodeSelector:
      #type: highperf
    persistence:
      enableStatefulSetAutoDeletePVC: true
      size: 5Gi
  read:
    replicas: 3
    #nodeSelector:
    #  type: highperf
  write:
    replicas: 3
    #nodeSelector:
    #  type: highperf
    persistence:
      enableStatefulSetAutoDeletePVC: true
      size: 2Gi

syslog:
  services:
    nsd-backbone:
        name: nsd-backbone
        labels:
          type: bgp-ingress
        containerPort: 1516
        protocol: UDP
        service:
          type: LoadBalancer
          port: 1516

promtail:
  extraPorts:
    Fab1:
      name: fab1
      labels:
        type: bgp-ingress
      containerPort: 1513
      protocol: TCP
      service:
        type: LoadBalancer
        port: 1514
    nsd-backbone:
      name: nsd-backbone
      containerPort: 1516
      protocol: TCP
      service:
        type: ClusterIP

